Search.setIndex({"docnames": ["_autosummary/nimiqclient", "_autosummary/nimiqclient.callback", "_autosummary/nimiqclient.callback.Callback", "_autosummary/nimiqclient.error_exception", "_autosummary/nimiqclient.error_exception.InternalErrorException", "_autosummary/nimiqclient.error_exception.RemoteErrorException", "_autosummary/nimiqclient.models", "_autosummary/nimiqclient.models.account", "_autosummary/nimiqclient.models.account.Account", "_autosummary/nimiqclient.models.account.AccountType", "_autosummary/nimiqclient.models.account.HTLC", "_autosummary/nimiqclient.models.account.StakingContract", "_autosummary/nimiqclient.models.account.VestingContract", "_autosummary/nimiqclient.models.account.WalletAccount", "_autosummary/nimiqclient.models.block", "_autosummary/nimiqclient.models.block.Block", "_autosummary/nimiqclient.models.block.BlockType", "_autosummary/nimiqclient.models.block.ForkProof", "_autosummary/nimiqclient.models.block.MacroBlock", "_autosummary/nimiqclient.models.block.MicroBlock", "_autosummary/nimiqclient.models.block.SlashedSlots", "_autosummary/nimiqclient.models.block.Slot", "_autosummary/nimiqclient.models.block_log", "_autosummary/nimiqclient.models.block_log.AppliedBlockLog", "_autosummary/nimiqclient.models.block_log.BlockLog", "_autosummary/nimiqclient.models.block_log.BlockLogType", "_autosummary/nimiqclient.models.block_log.RevertedBlockLog", "_autosummary/nimiqclient.models.inherent", "_autosummary/nimiqclient.models.inherent.Inherent", "_autosummary/nimiqclient.models.log", "_autosummary/nimiqclient.models.log.CreateStakerLog", "_autosummary/nimiqclient.models.log.CreateValidatorLog", "_autosummary/nimiqclient.models.log.DeleteValidatorLog", "_autosummary/nimiqclient.models.log.HTLCCreateLog", "_autosummary/nimiqclient.models.log.HTLCEarlyResolveLog", "_autosummary/nimiqclient.models.log.HTLCRegularTransferLog", "_autosummary/nimiqclient.models.log.HTLCTimeoutResolveLog", "_autosummary/nimiqclient.models.log.InactivateValidatorLog", "_autosummary/nimiqclient.models.log.Log", "_autosummary/nimiqclient.models.log.LogType", "_autosummary/nimiqclient.models.log.ParkLog", "_autosummary/nimiqclient.models.log.PayFeeLog", "_autosummary/nimiqclient.models.log.PayoutRewardLog", "_autosummary/nimiqclient.models.log.ReactivateValidatorLog", "_autosummary/nimiqclient.models.log.RevertContractLog", "_autosummary/nimiqclient.models.log.SlashLog", "_autosummary/nimiqclient.models.log.StakeLog", "_autosummary/nimiqclient.models.log.TransferLog", "_autosummary/nimiqclient.models.log.UnparkValidatorLog", "_autosummary/nimiqclient.models.log.UnstakeLog", "_autosummary/nimiqclient.models.log.UpdateStakerLog", "_autosummary/nimiqclient.models.log.UpdateValidatorLog", "_autosummary/nimiqclient.models.log.VestingCreateLog", "_autosummary/nimiqclient.models.mempool", "_autosummary/nimiqclient.models.mempool.MempoolInfo", "_autosummary/nimiqclient.models.node", "_autosummary/nimiqclient.models.node.LogLevel", "_autosummary/nimiqclient.models.node.SyncStatus", "_autosummary/nimiqclient.models.peer", "_autosummary/nimiqclient.models.peer.Peer", "_autosummary/nimiqclient.models.peer.PeerAddressState", "_autosummary/nimiqclient.models.peer.PeerConnectionState", "_autosummary/nimiqclient.models.peer.PeerStateCommand", "_autosummary/nimiqclient.models.staker", "_autosummary/nimiqclient.models.staker.Staker", "_autosummary/nimiqclient.models.state", "_autosummary/nimiqclient.models.state.BlockchainState", "_autosummary/nimiqclient.models.state.StateData", "_autosummary/nimiqclient.models.transaction", "_autosummary/nimiqclient.models.transaction.Transaction", "_autosummary/nimiqclient.models.transaction_log", "_autosummary/nimiqclient.models.transaction_log.TransactionLog", "_autosummary/nimiqclient.models.validator", "_autosummary/nimiqclient.models.validator.ParkedValidators", "_autosummary/nimiqclient.models.validator.Validator", "_autosummary/nimiqclient.nimiq_client", "_autosummary/nimiqclient.nimiq_client.NimiqClient", "_autosummary/nimiqclient.websocket_rpc", "_autosummary/nimiqclient.websocket_rpc.NimiqRPCMethods", "_autosummary/nimiqclient.websocket_rpc.NimiqSerializer", "index"], "filenames": ["_autosummary/nimiqclient.rst", "_autosummary/nimiqclient.callback.rst", "_autosummary/nimiqclient.callback.Callback.rst", "_autosummary/nimiqclient.error_exception.rst", "_autosummary/nimiqclient.error_exception.InternalErrorException.rst", "_autosummary/nimiqclient.error_exception.RemoteErrorException.rst", "_autosummary/nimiqclient.models.rst", "_autosummary/nimiqclient.models.account.rst", "_autosummary/nimiqclient.models.account.Account.rst", "_autosummary/nimiqclient.models.account.AccountType.rst", "_autosummary/nimiqclient.models.account.HTLC.rst", "_autosummary/nimiqclient.models.account.StakingContract.rst", "_autosummary/nimiqclient.models.account.VestingContract.rst", "_autosummary/nimiqclient.models.account.WalletAccount.rst", "_autosummary/nimiqclient.models.block.rst", "_autosummary/nimiqclient.models.block.Block.rst", "_autosummary/nimiqclient.models.block.BlockType.rst", "_autosummary/nimiqclient.models.block.ForkProof.rst", "_autosummary/nimiqclient.models.block.MacroBlock.rst", "_autosummary/nimiqclient.models.block.MicroBlock.rst", "_autosummary/nimiqclient.models.block.SlashedSlots.rst", "_autosummary/nimiqclient.models.block.Slot.rst", "_autosummary/nimiqclient.models.block_log.rst", "_autosummary/nimiqclient.models.block_log.AppliedBlockLog.rst", "_autosummary/nimiqclient.models.block_log.BlockLog.rst", "_autosummary/nimiqclient.models.block_log.BlockLogType.rst", "_autosummary/nimiqclient.models.block_log.RevertedBlockLog.rst", "_autosummary/nimiqclient.models.inherent.rst", "_autosummary/nimiqclient.models.inherent.Inherent.rst", "_autosummary/nimiqclient.models.log.rst", "_autosummary/nimiqclient.models.log.CreateStakerLog.rst", "_autosummary/nimiqclient.models.log.CreateValidatorLog.rst", "_autosummary/nimiqclient.models.log.DeleteValidatorLog.rst", "_autosummary/nimiqclient.models.log.HTLCCreateLog.rst", "_autosummary/nimiqclient.models.log.HTLCEarlyResolveLog.rst", "_autosummary/nimiqclient.models.log.HTLCRegularTransferLog.rst", "_autosummary/nimiqclient.models.log.HTLCTimeoutResolveLog.rst", "_autosummary/nimiqclient.models.log.InactivateValidatorLog.rst", "_autosummary/nimiqclient.models.log.Log.rst", "_autosummary/nimiqclient.models.log.LogType.rst", "_autosummary/nimiqclient.models.log.ParkLog.rst", "_autosummary/nimiqclient.models.log.PayFeeLog.rst", "_autosummary/nimiqclient.models.log.PayoutRewardLog.rst", "_autosummary/nimiqclient.models.log.ReactivateValidatorLog.rst", "_autosummary/nimiqclient.models.log.RevertContractLog.rst", "_autosummary/nimiqclient.models.log.SlashLog.rst", "_autosummary/nimiqclient.models.log.StakeLog.rst", "_autosummary/nimiqclient.models.log.TransferLog.rst", "_autosummary/nimiqclient.models.log.UnparkValidatorLog.rst", "_autosummary/nimiqclient.models.log.UnstakeLog.rst", "_autosummary/nimiqclient.models.log.UpdateStakerLog.rst", "_autosummary/nimiqclient.models.log.UpdateValidatorLog.rst", "_autosummary/nimiqclient.models.log.VestingCreateLog.rst", "_autosummary/nimiqclient.models.mempool.rst", "_autosummary/nimiqclient.models.mempool.MempoolInfo.rst", "_autosummary/nimiqclient.models.node.rst", "_autosummary/nimiqclient.models.node.LogLevel.rst", "_autosummary/nimiqclient.models.node.SyncStatus.rst", "_autosummary/nimiqclient.models.peer.rst", "_autosummary/nimiqclient.models.peer.Peer.rst", "_autosummary/nimiqclient.models.peer.PeerAddressState.rst", "_autosummary/nimiqclient.models.peer.PeerConnectionState.rst", "_autosummary/nimiqclient.models.peer.PeerStateCommand.rst", "_autosummary/nimiqclient.models.staker.rst", "_autosummary/nimiqclient.models.staker.Staker.rst", "_autosummary/nimiqclient.models.state.rst", "_autosummary/nimiqclient.models.state.BlockchainState.rst", "_autosummary/nimiqclient.models.state.StateData.rst", "_autosummary/nimiqclient.models.transaction.rst", "_autosummary/nimiqclient.models.transaction.Transaction.rst", "_autosummary/nimiqclient.models.transaction_log.rst", "_autosummary/nimiqclient.models.transaction_log.TransactionLog.rst", "_autosummary/nimiqclient.models.validator.rst", "_autosummary/nimiqclient.models.validator.ParkedValidators.rst", "_autosummary/nimiqclient.models.validator.Validator.rst", "_autosummary/nimiqclient.nimiq_client.rst", "_autosummary/nimiqclient.nimiq_client.NimiqClient.rst", "_autosummary/nimiqclient.websocket_rpc.rst", "_autosummary/nimiqclient.websocket_rpc.NimiqRPCMethods.rst", "_autosummary/nimiqclient.websocket_rpc.NimiqSerializer.rst", "index.rst"], "titles": ["nimiqclient", "nimiqclient.callback", "nimiqclient.callback.Callback", "nimiqclient.error_exception", "nimiqclient.error_exception.InternalErrorException", "nimiqclient.error_exception.RemoteErrorException", "nimiqclient.models", "nimiqclient.models.account", "nimiqclient.models.account.Account", "nimiqclient.models.account.AccountType", "nimiqclient.models.account.HTLC", "nimiqclient.models.account.StakingContract", "nimiqclient.models.account.VestingContract", "nimiqclient.models.account.WalletAccount", "nimiqclient.models.block", "nimiqclient.models.block.Block", "nimiqclient.models.block.BlockType", "nimiqclient.models.block.ForkProof", "nimiqclient.models.block.MacroBlock", "nimiqclient.models.block.MicroBlock", "nimiqclient.models.block.SlashedSlots", "nimiqclient.models.block.Slot", "nimiqclient.models.block_log", "nimiqclient.models.block_log.AppliedBlockLog", "nimiqclient.models.block_log.BlockLog", "nimiqclient.models.block_log.BlockLogType", "nimiqclient.models.block_log.RevertedBlockLog", "nimiqclient.models.inherent", "nimiqclient.models.inherent.Inherent", "nimiqclient.models.log", "nimiqclient.models.log.CreateStakerLog", "nimiqclient.models.log.CreateValidatorLog", "nimiqclient.models.log.DeleteValidatorLog", "nimiqclient.models.log.HTLCCreateLog", "nimiqclient.models.log.HTLCEarlyResolveLog", "nimiqclient.models.log.HTLCRegularTransferLog", "nimiqclient.models.log.HTLCTimeoutResolveLog", "nimiqclient.models.log.InactivateValidatorLog", "nimiqclient.models.log.Log", "nimiqclient.models.log.LogType", "nimiqclient.models.log.ParkLog", "nimiqclient.models.log.PayFeeLog", "nimiqclient.models.log.PayoutRewardLog", "nimiqclient.models.log.ReactivateValidatorLog", "nimiqclient.models.log.RevertContractLog", "nimiqclient.models.log.SlashLog", "nimiqclient.models.log.StakeLog", "nimiqclient.models.log.TransferLog", "nimiqclient.models.log.UnparkValidatorLog", "nimiqclient.models.log.UnstakeLog", "nimiqclient.models.log.UpdateStakerLog", "nimiqclient.models.log.UpdateValidatorLog", "nimiqclient.models.log.VestingCreateLog", "nimiqclient.models.mempool", "nimiqclient.models.mempool.MempoolInfo", "nimiqclient.models.node", "nimiqclient.models.node.LogLevel", "nimiqclient.models.node.SyncStatus", "nimiqclient.models.peer", "nimiqclient.models.peer.Peer", "nimiqclient.models.peer.PeerAddressState", "nimiqclient.models.peer.PeerConnectionState", "nimiqclient.models.peer.PeerStateCommand", "nimiqclient.models.staker", "nimiqclient.models.staker.Staker", "nimiqclient.models.state", "nimiqclient.models.state.BlockchainState", "nimiqclient.models.state.StateData", "nimiqclient.models.transaction", "nimiqclient.models.transaction.Transaction", "nimiqclient.models.transaction_log", "nimiqclient.models.transaction_log.TransactionLog", "nimiqclient.models.validator", "nimiqclient.models.validator.ParkedValidators", "nimiqclient.models.validator.Validator", "nimiqclient.nimiq_client", "nimiqclient.nimiq_client.NimiqClient", "nimiqclient.websocket_rpc", "nimiqclient.websocket_rpc.NimiqRPCMethods", "nimiqclient.websocket_rpc.NimiqSerializer", "Nimiq Python Client"], "terms": {"class": [1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "callback_funct": 2, "kwarg": [2, 54, 76], "result_decod": 2, "type": [2, 8, 9, 10, 11, 12, 15, 16, 18, 19, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 76, 78, 79], "union": 2, "callabl": [2, 76], "dict": [2, 8, 10, 11, 12, 15, 18, 19, 20, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 76], "t": [2, 67], "nonetyp": 2, "sourc": [2, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 79, 80], "base": [2, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 79, 80], "gener": [2, 67, 80], "us": [2, 10, 56, 76, 79, 80], "when": [2, 76, 80], "call": [2, 76, 80], "method": [2, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 57, 59, 64, 66, 67, 69, 71, 73, 74, 76, 78, 79], "subscrib": [2, 76, 78], "specif": [2, 8, 10, 11, 12, 15, 18, 19, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 67, 76], "event": [2, 40, 45, 76], "paramet": [2, 8, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 59, 64, 66, 67, 69, 71, 73, 74, 76, 78, 79], "ani": [2, 76], "typevar": 2, "await": [2, 76, 80], "none": [2, 18, 19, 46, 49, 50, 59, 64, 69, 74, 76], "function": 2, "client": [2, 76, 78, 79], "happen": 2, "param": 2, "result": [2, 78], "an": [2, 18, 76], "rpc": [2, 4, 67, 76, 78, 79, 80], "must": 2, "decod": 2, "befor": 2, "pass": [2, 76, 80], "option": [2, 13, 46, 49, 50, 59, 64, 69, 74, 76], "argument": [2, 76], "sent": [2, 59, 69], "async": [2, 76, 78, 79, 80], "appropri": 2, "nimiq": [2, 8, 9, 16, 25, 39, 69, 76, 78, 79], "int": [2, 8, 10, 11, 12, 15, 17, 18, 19, 20, 21, 28, 30, 33, 35, 40, 41, 42, 45, 46, 47, 49, 52, 57, 59, 60, 61, 64, 66, 69, 73, 74, 76, 78, 79], "str": [2, 8, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 59, 62, 64, 66, 69, 71, 74, 76, 78], "done": [2, 80], "except": [3, 4, 5], "intern": 4, "error": [4, 56], "dure": 4, "json": [4, 76], "request": [4, 76, 78, 80], "messag": [5, 69, 76, 79], "code": [5, 76, 79, 80], "remot": 5, "server": [5, 8, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 64, 66, 67, 69, 71, 73, 74, 76, 78], "address": [8, 10, 11, 12, 13, 21, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 48, 49, 50, 51, 59, 60, 64, 69, 74, 76, 78], "balanc": [8, 10, 11, 12, 64, 74, 76], "object": [8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 57, 59, 64, 66, 69, 71, 73, 74, 76, 80], "normal": [8, 9], "return": [8, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 57, 59, 60, 61, 64, 66, 67, 69, 71, 73, 74, 76, 79], "user": [8, 10, 11, 12, 13, 69, 76, 80], "friendli": [8, 10, 11, 12, 13, 69], "nq": [8, 10, 11, 12, 13, 69], "smallest": [8, 10, 11, 12, 69, 76], "unit": [8, 10, 11, 12, 69, 76], "accounttyp": [8, 10, 11, 12], "The": [8, 10, 11, 12, 15, 17, 18, 19, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 76, 80], "associ": [8, 10, 11, 12, 15, 18, 19, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 71], "static": [8, 10, 11, 12, 15, 18, 19, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "get_account": [8, 10, 11, 12, 76], "data": [8, 10, 11, 12, 15, 18, 19, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 69, 74, 76], "get": [8, 10, 11, 12, 15, 18, 19, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 76, 80], "from": [8, 10, 11, 12, 15, 18, 19, 20, 21, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 69, 76, 78, 80], "dictionari": [8, 10, 11, 12, 15, 18, 19, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 76], "contain": [8, 10, 11, 12, 15, 18, 19, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 69, 76], "vestingcontract": [8, 10, 11, 76], "htlc": [8, 9, 11, 12, 33, 34, 35, 36, 39, 76], "attribut": [9, 16, 25, 39, 54, 56, 60, 61, 62, 76, 78], "basic": [9, 76], "hash": [9, 10, 15, 17, 18, 19, 28, 33, 35, 59, 66, 69, 71, 76, 78], "timelock": [9, 10], "contract": [9, 10, 11, 12, 33, 34, 35, 36, 39, 44, 52, 69, 76], "stake": [9, 11, 30, 39, 46, 49, 76], "vest": [9, 12, 39, 52], "sender": [10, 33, 41, 47, 76], "recipi": [10, 33, 42, 47, 69, 76], "hashroot": [10, 33], "hashcount": [10, 33], "timeout": [10, 33, 36, 39], "totalamount": [10, 33, 52], "hex": [10, 13, 69, 76], "encod": [10, 13, 69, 76], "32": [10, 13], "byte": [10, 13, 54, 59, 76], "root": [10, 33, 80], "number": [10, 12, 15, 17, 18, 19, 20, 21, 28, 54, 66, 69, 73, 74, 76], "thi": [10, 21, 64, 66, 67, 69, 74, 76, 80], "i": [10, 12, 17, 18, 54, 59, 67, 69, 76, 80], "split": 10, "block": [10, 12, 23, 24, 25, 26, 28, 40, 45, 57, 59, 64, 66, 69, 73, 74, 76, 78], "after": [10, 12, 57], "which": [10, 12, 57, 64, 66, 73, 74, 76, 80], "can": [10, 76, 78, 80], "onli": [10, 57, 76], "origin": [10, 80], "recov": 10, "fund": [10, 12, 76], "total": [10, 12, 33, 52, 54], "amount": [10, 12, 28, 33, 47, 52], "wa": [10, 12, 66, 67, 76, 80], "provid": [10, 12, 76, 78], "creation": [10, 12, 30, 31, 33, 52, 76], "owner": [12, 52], "vestingstart": 12, "vestingstepblock": 12, "vestingstepamount": 12, "vestingtotalamount": 12, "commenc": 12, "some": 12, "part": 12, "releas": 12, "everi": 12, "publickei": [13, 21], "privatekei": 13, "wallet": [13, 76], "ed25519": 13, "public": [13, 21], "kei": [13, 21, 74, 76], "privat": [13, 76], "batch": [15, 18, 19, 76], "bodyhash": [15, 18, 19], "epoch": [15, 18, 19, 76], "extradata": [15, 18, 19], "parenthash": [15, 18, 19], "size": [15, 18, 19], "version": [15, 18, 19, 59], "network": [15, 18, 19], "timestamp": [15, 18, 19, 23, 26, 28, 69], "seed": [15, 18, 19], "statehash": [15, 18, 19], "historyhash": [15, 18, 19], "height": [15, 18, 19, 69, 76], "blocktyp": [15, 18, 19], "bodi": [15, 18, 19], "extra": [15, 18, 19, 76], "parent": [15, 18, 19], "id": [15, 18, 19, 59, 76, 78], "blockse": [15, 18, 19], "state": [15, 18, 19, 59, 60, 61, 62, 76, 78], "histori": [15, 18, 19], "get_block": [15, 18, 19], "microblock": [15, 16, 18], "macroblock": [15, 16, 19], "account": [16, 69, 76], "macro": [16, 18], "micro": 16, "blocknumb": [17, 20, 28, 57, 66, 69, 73], "viewnumb": 17, "fork": [17, 19, 76], "proof": [17, 19], "view": 17, "list": [17, 18, 19, 23, 24, 26, 54, 71, 73, 76], "length": 17, "alwai": 17, "2": [17, 54, 60, 61, 80], "iselectionblock": 18, "parentelectionhash": 18, "interlink": 18, "slot": [18, 20, 45, 76], "lostrewardset": 18, "disabledset": 18, "justif": [18, 19], "transact": [18, 19, 23, 24, 26, 42, 47, 54, 71, 76], "bool": [18, 45, 69, 74, 76], "indic": [18, 20, 45, 64, 74, 76], "whether": 18, "elect": [18, 76, 78], "set": [18, 56, 76], "lost": [18, 20, 23, 24, 26], "reward": [18, 20, 31, 32, 39, 42, 51, 74], "disabledrewardset": 18, "disabl": [18, 20, 45], "blockjustif": [18, 19], "either": [18, 19, 76], "repres": [18, 19, 76], "produc": [19, 76], "forkproof": 19, "equivocationproof": 19, "blockproduc": 19, "equivoc": 19, "lostreward": 20, "slash": [20, 39, 45, 76], "bitset": 20, "slotnumb": 21, "valid": [21, 30, 31, 32, 37, 39, 40, 43, 45, 46, 48, 49, 50, 51, 64, 67, 69, 76, 78], "belong": 21, "inher": [23, 24, 26, 76], "blocklog": [23, 26, 76, 78], "appli": [23, 25], "log": [23, 24, 25, 26, 56, 71, 76, 78], "blocklogtyp": [23, 24, 26], "get_block_log": [23, 24, 26], "revertedblocklog": [23, 24], "type_": 24, "appliedblocklog": [24, 26], "revert": [25, 26, 39, 76], "target": 28, "valu": [28, 30, 42, 46, 49, 54, 56, 60, 61, 62, 64, 69, 74, 76, 80], "stakeraddress": [30, 46, 49, 50], "validatoraddress": [30, 31, 32, 37, 40, 43, 45, 46, 48, 49, 51], "staker": [30, 39, 46, 49, 50, 74, 76], "logtyp": [30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "get_log": [30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "subtyp": [30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "rewardaddress": [31, 32, 74], "delet": [32, 39], "contractaddress": [33, 34, 35, 36, 44], "hashalgorithm": 33, "algorithm": 33, "count": 33, "earli": [34, 39], "resolv": [34, 36, 39], "preimag": 35, "hashdepth": 35, "regular": [35, 39], "transfer": [35, 39, 47], "pre": 35, "imag": 35, "depth": 35, "inactiv": [37, 39], "create_stak": 39, "creat": [39, 76, 79, 80], "create_valid": 39, "delete_valid": 39, "htlc_creat": 39, "htlc_early_resolv": 39, "htlc_regular_transf": 39, "htlc_timeout_resolv": 39, "inactivate_valid": 39, "park": [39, 40, 73, 76], "payout_reward": 39, "payout": [39, 42], "pay_fe": 39, "pai": 39, "fee": [39, 41, 54, 69, 76], "reactivate_valid": 39, "reactiv": [39, 43, 76], "revert_contract": 39, "unpark_valid": 39, "unpark": [39, 48], "unstak": [39, 49], "update_stak": 39, "updat": [39, 50, 51, 76], "update_valid": 39, "vesting_cr": 39, "eventblock": [40, 45], "from_": [41, 47, 69], "payment": 41, "revers": 44, "newlydis": 45, "flag": [45, 69, 74], "ha": [45, 64, 74, 76], "been": [45, 64, 74, 76], "newli": 45, "oldvalidatoraddress": 50, "newvalidatoraddress": 50, "old": [50, 51], "new": [50, 51, 60, 61, 76, 78], "oldrewardaddress": 51, "newrewardaddress": 51, "contractown": 52, "starttim": 52, "timestep": 52, "stepamount": 52, "start": [52, 57, 76, 80], "time": [52, 59], "step": [52, 80], "inform": [54, 59, 76], "bucket": [54, 76], "subset": 54, "per": [54, 76], "10000": 54, "5000": 54, "2000": 54, "1000": [54, 76, 79], "500": 54, "200": 54, "100": 54, "50": 54, "20": 54, "10": [54, 76], "5": [54, 60, 61, 76], "1": [54, 60, 61, 76, 80], "0": [54, 69, 76, 80], "current": [54, 57, 76], "have": 54, "more": 54, "than": 54, "one": 54, "pend": 54, "transactionsperbucket": 54, "A": [54, 76], "assign": 54, "highest": [54, 57], "lower": 54, "its": [54, 76], "enum": [56, 60, 61, 62], "level": 56, "jsonrpc": 56, "assert": 56, "debug": 56, "info": 56, "trace": 56, "verbos": 56, "warn": 56, "startingblock": 57, "currentblock": 57, "highestblock": 57, "sync": 57, "statu": [57, 80], "import": [57, 76, 80], "reset": 57, "reach": 57, "hi": 57, "head": [57, 59], "same": 57, "estim": 57, "addressst": 59, "connectionst": 59, "timeoffset": 59, "headhash": 59, "latenc": 59, "rx": 59, "tx": 59, "peerconnectionst": 59, "connect": [59, 61, 62, 76], "node": [59, 80], "run": [59, 76, 80], "offset": [59, 76], "milisecond": 59, "receiv": [59, 76, 79], "ban": [60, 62], "ball": 60, "establish": [60, 61, 76], "fail": 60, "4": [60, 61], "tri": 60, "3": [60, 61], "alreadi": 60, "close": [61, 79], "6": 61, "negoti": 61, "command": [62, 76, 80], "chang": [62, 76], "disconnect": 62, "unban": 62, "inactivebal": 64, "retiredbal": 64, "deleg": [64, 76], "inactivefrom": 64, "inact": [64, 74], "retir": [64, 74, 76], "sinc": [64, 74], "blockhash": [66, 69], "blockchain": [66, 67, 78], "allow": 66, "relat": 66, "fetch": 66, "metadata": 67, "depend": [67, 80], "blockchainst": [67, 78], "obtain": [67, 78], "fromaddress": 69, "toaddress": 69, "confirm": 69, "transactionindex": 69, "inmempool": 69, "unix": 69, "index": 69, "send": [69, 76, 79, 80], "integ": 69, "bit": 69, "mempool": [69, 76], "were": 73, "signingkei": 74, "votingkei": 74, "numstak": 74, "inactivityflag": 74, "signaldata": 74, "jailedfrom": 74, "sign": [74, 76], "vote": [74, 76], "condit": 74, "signal": 74, "jail": 74, "scheme": [76, 80], "http": [76, 80], "password": [76, 80], "host": [76, 80], "127": [76, 80], "port": [76, 80], "8648": [76, 80], "url_suffix": 76, "ws_response_timeout": 76, "api": [76, 78], "protocol": 76, "w": 76, "author": 76, "ip": 76, "own": 76, "batch_numb": 76, "block_numb": 76, "most": 76, "recent": 76, "consensu": [76, 80], "good": 76, "other": 76, "bad": 76, "create_account": 76, "passphras": 76, "store": [76, 80], "add": [76, 80], "walletaccount": 76, "create_remove_stake_transact": 76, "validitystartheight": 76, "do": 76, "remov": 76, "could": 76, "string": 76, "e": 76, "g": 76, "create_retire_stake_transact": 76, "retire_stak": 76, "create_update_staker_transact": 76, "new_deleg": 76, "reactivate_all_stak": 76, "epoch_numb": 76, "get_account_by_address": 76, "detail": 76, "given": 76, "about": 76, "default": [76, 80], "empti": 76, "non": 76, "exist": 76, "statedata": 76, "all": [76, 80], "tree": 76, "get_active_valid": 76, "activ": 76, "get_block_by_hash": 76, "include_transact": 76, "gather": 76, "If": 76, "true": 76, "full": 76, "fals": 76, "found": 76, "get_block_by_numb": 76, "get_block_transaction_count_by_hash": 76, "match": 76, "get_block_transaction_count_by_numb": 76, "get_callback": 76, "callback": 76, "subscript": [76, 78], "get_current_slashed_slot": 76, "slashedslot": 76, "get_inherents_by_batch_numb": 76, "ar": [76, 80], "go": 76, "get_inherents_by_block_numb": 76, "get_latest_block": 76, "include_bodi": 76, "latest": 76, "chain": 76, "get_parked_valid": 76, "parkedvalid": 76, "get_previous_slashed_slot": 76, "previou": 76, "get_raw_transaction_info": 76, "deseri": [76, 79], "get_slot_at": 76, "queri": 76, "specifi": 76, "rtype": 76, "get_staker_by_address": 76, "get_stakers_by_validator_address": 76, "get_subscript": 76, "get_transaction_by_hash": 76, "get_transaction_hashes_by_address": 76, "number_of_transact": 76, "successfulli": 76, "perform": 76, "note": [76, 80], "might": 76, "local": 76, "due": 76, "should": 76, "maximum": 76, "shall": 76, "link": 76, "get_transactions_by_address": 76, "get_transactions_by_batch_numb": 76, "get_transactions_by_block_numb": 76, "get_validator_address": 76, "get_validator_by_address": 76, "include_stak": 76, "includ": 76, "correspond": 76, "get_validator_signing_kei": 76, "get_validator_voting_kei": 76, "get_valid": 76, "importrawkei": 76, "private_kei": 76, "raw": 76, "is_account_import": 76, "wether": 76, "check": [76, 80], "is_account_unlock": 76, "unlock": 76, "lock_account": 76, "lock": 76, "sre": 76, "situat": 76, "overview": 76, "sort": 76, "mempoolinfo": 76, "mempool_cont": 76, "min_fee_per_byt": 76, "minimum": 76, "peer_count": 76, "peer": 76, "peer_id": 76, "peer_list": 76, "known": 76, "peer_stat": 76, "send_basic_transact": 76, "send_raw_transact": 76, "field": 76, "send_set_active_stake_transact": 76, "new_active_bal": 76, "send_stake_transact": 76, "set_peer_st": 76, "peerstatecommand": 76, "subscribe_for_head_block": 76, "each": 76, "subscribe_for_head_block_hash": 76, "subscribe_for_logs_by_addresses_and_typ": 76, "log_typ": 76, "subscribe_for_validator_election_by_address": 76, "unlock_account": 76, "durat": 76, "requir": [76, 80], "rpcmethodsbas": 78, "defin": 78, "subscribeforheadblock": 78, "websocket": [78, 79], "subscribeforheadblockhash": 78, "": [78, 79], "subscribeforlogsbyaddressesandtyp": 78, "subscribeforvalidatorelectionbyaddress": 78, "jsonserializingwebsocket": 79, "serial": 79, "rpcmessag": 79, "fastapi_websocket_rpc": 79, "simplewebsocket": 79, "web": 79, "socket": 79, "underli": 79, "recv": 79, "format": [79, 80], "msg": 79, "implement": 80, "albatross": 80, "spec": 80, "To": 80, "we": 80, "nimiqcli": 80, "asyncio": 80, "luna": 80, "moon": 80, "make": 80, "print": 80, "config": 80, "initi": 80, "complet": 80, "avail": 80, "here": 80, "out": 80, "behind": 80, "scene": 80, "clone": 80, "repositori": 80, "packag": 80, "git": 80, "github": 80, "com": 80, "jsdanielh": 80, "cd": 80, "setup": 80, "py": 80, "repo": 80, "happi": 80, "you": 80, "need": 80, "devnet": 80, "todo": 80, "folder": 80, "line": 80, "like": 80, "m": 80, "unittest": 80, "discov": 80, "v": 80, "automat": 80, "sphinx": 80, "directori": 80, "develop": 80, "pip": 80, "r": 80, "dev": 80, "txt": 80, "Then": 80, "doc": 80, "via": 80, "html": 80, "blank": 80, "file": 80, "name": 80, "nojekyl": 80, "page": 80, "touch": 80, "commun": 80, "rraallvv": 80, "bug": 80, "report": 80, "pull": 80, "welcom": 80, "pleas": 80, "refer": 80, "issu": 80, "tracker": 80, "idea": 80, "apach": 80}, "objects": {"": [[0, 0, 0, "-", "nimiqclient"]], "nimiqclient": [[1, 0, 0, "-", "callback"], [3, 0, 0, "-", "error_exception"], [6, 0, 0, "-", "models"], [75, 0, 0, "-", "nimiq_client"], [77, 0, 0, "-", "websocket_rpc"]], "nimiqclient.callback": [[2, 1, 1, "", "Callback"]], "nimiqclient.callback.Callback": [[2, 2, 1, "", "call"]], "nimiqclient.error_exception": [[4, 3, 1, "", "InternalErrorException"], [5, 3, 1, "", "RemoteErrorException"]], "nimiqclient.models": [[7, 0, 0, "-", "account"], [14, 0, 0, "-", "block"], [22, 0, 0, "-", "block_log"], [27, 0, 0, "-", "inherent"], [29, 0, 0, "-", "log"], [53, 0, 0, "-", "mempool"], [55, 0, 0, "-", "node"], [58, 0, 0, "-", "peer"], [63, 0, 0, "-", "staker"], [65, 0, 0, "-", "state"], [68, 0, 0, "-", "transaction"], [70, 0, 0, "-", "transaction_log"], [72, 0, 0, "-", "validator"]], "nimiqclient.models.account": [[8, 1, 1, "", "Account"], [9, 1, 1, "", "AccountType"], [10, 1, 1, "", "HTLC"], [11, 1, 1, "", "StakingContract"], [12, 1, 1, "", "VestingContract"], [13, 1, 1, "", "WalletAccount"]], "nimiqclient.models.account.Account": [[8, 2, 1, "", "get_account"]], "nimiqclient.models.account.AccountType": [[9, 4, 1, "", "BASIC"], [9, 4, 1, "", "HTLC"], [9, 4, 1, "", "STAKING"], [9, 4, 1, "", "VESTING"]], "nimiqclient.models.account.HTLC": [[10, 2, 1, "", "get_account"]], "nimiqclient.models.account.StakingContract": [[11, 2, 1, "", "get_account"]], "nimiqclient.models.account.VestingContract": [[12, 2, 1, "", "get_account"]], "nimiqclient.models.block": [[15, 1, 1, "", "Block"], [16, 1, 1, "", "BlockType"], [17, 1, 1, "", "ForkProof"], [18, 1, 1, "", "MacroBlock"], [19, 1, 1, "", "MicroBlock"], [20, 1, 1, "", "SlashedSlots"], [21, 1, 1, "", "Slot"]], "nimiqclient.models.block.Block": [[15, 2, 1, "", "get_block"]], "nimiqclient.models.block.BlockType": [[16, 4, 1, "", "MacroBlock"], [16, 4, 1, "", "MicroBlock"]], "nimiqclient.models.block.MacroBlock": [[18, 2, 1, "", "get_block"]], "nimiqclient.models.block.MicroBlock": [[19, 2, 1, "", "get_block"]], "nimiqclient.models.block_log": [[23, 1, 1, "", "AppliedBlockLog"], [24, 1, 1, "", "BlockLog"], [25, 1, 1, "", "BlockLogType"], [26, 1, 1, "", "RevertedBlockLog"]], "nimiqclient.models.block_log.AppliedBlockLog": [[23, 2, 1, "", "get_block_log"]], "nimiqclient.models.block_log.BlockLog": [[24, 2, 1, "", "get_block_log"]], "nimiqclient.models.block_log.BlockLogType": [[25, 4, 1, "", "APPLIED"], [25, 4, 1, "", "REVERTED"]], "nimiqclient.models.block_log.RevertedBlockLog": [[26, 2, 1, "", "get_block_log"]], "nimiqclient.models.inherent": [[28, 1, 1, "", "Inherent"]], "nimiqclient.models.log": [[30, 1, 1, "", "CreateStakerLog"], [31, 1, 1, "", "CreateValidatorLog"], [32, 1, 1, "", "DeleteValidatorLog"], [33, 1, 1, "", "HTLCCreateLog"], [34, 1, 1, "", "HTLCEarlyResolveLog"], [35, 1, 1, "", "HTLCRegularTransferLog"], [36, 1, 1, "", "HTLCTimeoutResolveLog"], [37, 1, 1, "", "InactivateValidatorLog"], [38, 1, 1, "", "Log"], [39, 1, 1, "", "LogType"], [40, 1, 1, "", "ParkLog"], [41, 1, 1, "", "PayFeeLog"], [42, 1, 1, "", "PayoutRewardLog"], [43, 1, 1, "", "ReactivateValidatorLog"], [44, 1, 1, "", "RevertContractLog"], [45, 1, 1, "", "SlashLog"], [46, 1, 1, "", "StakeLog"], [47, 1, 1, "", "TransferLog"], [48, 1, 1, "", "UnparkValidatorLog"], [49, 1, 1, "", "UnstakeLog"], [50, 1, 1, "", "UpdateStakerLog"], [51, 1, 1, "", "UpdateValidatorLog"], [52, 1, 1, "", "VestingCreateLog"]], "nimiqclient.models.log.CreateStakerLog": [[30, 2, 1, "", "get_log"]], "nimiqclient.models.log.CreateValidatorLog": [[31, 2, 1, "", "get_log"]], "nimiqclient.models.log.DeleteValidatorLog": [[32, 2, 1, "", "get_log"]], "nimiqclient.models.log.HTLCCreateLog": [[33, 2, 1, "", "get_log"]], "nimiqclient.models.log.HTLCEarlyResolveLog": [[34, 2, 1, "", "get_log"]], "nimiqclient.models.log.HTLCRegularTransferLog": [[35, 2, 1, "", "get_log"]], "nimiqclient.models.log.HTLCTimeoutResolveLog": [[36, 2, 1, "", "get_log"]], "nimiqclient.models.log.InactivateValidatorLog": [[37, 2, 1, "", "get_log"]], "nimiqclient.models.log.Log": [[38, 2, 1, "", "get_log"]], "nimiqclient.models.log.LogType": [[39, 4, 1, "", "CREATE_STAKER"], [39, 4, 1, "", "CREATE_VALIDATOR"], [39, 4, 1, "", "DELETE_VALIDATOR"], [39, 4, 1, "", "HTLC_CREATE"], [39, 4, 1, "", "HTLC_EARLY_RESOLVE"], [39, 4, 1, "", "HTLC_REGULAR_TRANSFER"], [39, 4, 1, "", "HTLC_TIMEOUT_RESOLVE"], [39, 4, 1, "", "INACTIVATE_VALIDATOR"], [39, 4, 1, "", "PARK"], [39, 4, 1, "", "PAYOUT_REWARD"], [39, 4, 1, "", "PAY_FEE"], [39, 4, 1, "", "REACTIVATE_VALIDATOR"], [39, 4, 1, "", "REVERT_CONTRACT"], [39, 4, 1, "", "SLASH"], [39, 4, 1, "", "STAKE"], [39, 4, 1, "", "TRANSFER"], [39, 4, 1, "", "UNPARK_VALIDATOR"], [39, 4, 1, "", "UNSTAKE"], [39, 4, 1, "", "UPDATE_STAKER"], [39, 4, 1, "", "UPDATE_VALIDATOR"], [39, 4, 1, "", "VESTING_CREATE"]], "nimiqclient.models.log.ParkLog": [[40, 2, 1, "", "get_log"]], "nimiqclient.models.log.PayFeeLog": [[41, 2, 1, "", "get_log"]], "nimiqclient.models.log.PayoutRewardLog": [[42, 2, 1, "", "get_log"]], "nimiqclient.models.log.ReactivateValidatorLog": [[43, 2, 1, "", "get_log"]], "nimiqclient.models.log.RevertContractLog": [[44, 2, 1, "", "get_log"]], "nimiqclient.models.log.SlashLog": [[45, 2, 1, "", "get_log"]], "nimiqclient.models.log.StakeLog": [[46, 2, 1, "", "get_log"]], "nimiqclient.models.log.TransferLog": [[47, 2, 1, "", "get_log"]], "nimiqclient.models.log.UnparkValidatorLog": [[48, 2, 1, "", "get_log"]], "nimiqclient.models.log.UnstakeLog": [[49, 2, 1, "", "get_log"]], "nimiqclient.models.log.UpdateStakerLog": [[50, 2, 1, "", "get_log"]], "nimiqclient.models.log.UpdateValidatorLog": [[51, 2, 1, "", "get_log"]], "nimiqclient.models.log.VestingCreateLog": [[52, 2, 1, "", "get_log"]], "nimiqclient.models.mempool": [[54, 1, 1, "", "MempoolInfo"]], "nimiqclient.models.mempool.MempoolInfo": [[54, 4, 1, "", "buckets"], [54, 4, 1, "", "total"], [54, 4, 1, "", "transactionsPerBucket"]], "nimiqclient.models.node": [[56, 1, 1, "", "LogLevel"], [57, 1, 1, "", "SyncStatus"]], "nimiqclient.models.node.LogLevel": [[56, 4, 1, "", "ASSERT"], [56, 4, 1, "", "DEBUG"], [56, 4, 1, "", "ERROR"], [56, 4, 1, "", "INFO"], [56, 4, 1, "", "TRACE"], [56, 4, 1, "", "VERBOSE"], [56, 4, 1, "", "WARN"]], "nimiqclient.models.peer": [[59, 1, 1, "", "Peer"], [60, 1, 1, "", "PeerAddressState"], [61, 1, 1, "", "PeerConnectionState"], [62, 1, 1, "", "PeerStateCommand"]], "nimiqclient.models.peer.PeerAddressState": [[60, 4, 1, "", "BANNED"], [60, 4, 1, "", "ESTABLISHED"], [60, 4, 1, "", "FAILED"], [60, 4, 1, "", "NEW"], [60, 4, 1, "", "TRIED"]], "nimiqclient.models.peer.PeerConnectionState": [[61, 4, 1, "", "CLOSED"], [61, 4, 1, "", "CONNECTED"], [61, 4, 1, "", "CONNECTING"], [61, 4, 1, "", "ESTABLISHED"], [61, 4, 1, "", "NEGOTIATING"], [61, 4, 1, "", "NEW"]], "nimiqclient.models.peer.PeerStateCommand": [[62, 4, 1, "", "BAN"], [62, 4, 1, "", "CONNECT"], [62, 4, 1, "", "DISCONNECT"], [62, 4, 1, "", "UNBAN"]], "nimiqclient.models.staker": [[64, 1, 1, "", "Staker"]], "nimiqclient.models.state": [[66, 1, 1, "", "BlockchainState"], [67, 1, 1, "", "StateData"]], "nimiqclient.models.transaction": [[69, 1, 1, "", "Transaction"]], "nimiqclient.models.transaction_log": [[71, 1, 1, "", "TransactionLog"]], "nimiqclient.models.validator": [[73, 1, 1, "", "ParkedValidators"], [74, 1, 1, "", "Validator"]], "nimiqclient.nimiq_client": [[76, 1, 1, "", "NimiqClient"]], "nimiqclient.nimiq_client.NimiqClient": [[76, 4, 1, "", "WS_RESPONSE_TIMEOUT"], [76, 2, 1, "", "accounts"], [76, 2, 1, "", "batch_number"], [76, 2, 1, "", "block_number"], [76, 2, 1, "", "consensus"], [76, 2, 1, "", "create_account"], [76, 2, 1, "", "create_remove_stake_transaction"], [76, 2, 1, "", "create_retire_stake_transaction"], [76, 2, 1, "", "create_update_staker_transaction"], [76, 2, 1, "", "epoch_number"], [76, 2, 1, "", "get_account_by_address"], [76, 2, 1, "", "get_accounts"], [76, 2, 1, "", "get_active_validators"], [76, 2, 1, "", "get_block_by_hash"], [76, 2, 1, "", "get_block_by_number"], [76, 2, 1, "", "get_block_transaction_count_by_hash"], [76, 2, 1, "", "get_block_transaction_count_by_number"], [76, 2, 1, "", "get_callbacks"], [76, 2, 1, "", "get_current_slashed_slots"], [76, 2, 1, "", "get_inherents_by_batch_number"], [76, 2, 1, "", "get_inherents_by_block_number"], [76, 2, 1, "", "get_latest_block"], [76, 2, 1, "", "get_parked_validators"], [76, 2, 1, "", "get_previous_slashed_slots"], [76, 2, 1, "", "get_raw_transaction_info"], [76, 2, 1, "", "get_slot_at"], [76, 2, 1, "", "get_staker_by_address"], [76, 2, 1, "", "get_stakers_by_validator_address"], [76, 2, 1, "", "get_subscriptions"], [76, 2, 1, "", "get_transaction_by_hash"], [76, 2, 1, "", "get_transaction_hashes_by_address"], [76, 2, 1, "", "get_transactions_by_address"], [76, 2, 1, "", "get_transactions_by_batch_number"], [76, 2, 1, "", "get_transactions_by_block_number"], [76, 2, 1, "", "get_validator_address"], [76, 2, 1, "", "get_validator_by_address"], [76, 2, 1, "", "get_validator_signing_key"], [76, 2, 1, "", "get_validator_voting_key"], [76, 2, 1, "", "get_validators"], [76, 2, 1, "", "importRawKey"], [76, 2, 1, "", "is_account_imported"], [76, 2, 1, "", "is_account_unlocked"], [76, 2, 1, "", "lock_account"], [76, 2, 1, "", "mempool"], [76, 2, 1, "", "mempool_content"], [76, 2, 1, "", "min_fee_per_byte"], [76, 2, 1, "", "peer_count"], [76, 2, 1, "", "peer_id"], [76, 2, 1, "", "peer_list"], [76, 2, 1, "", "peer_state"], [76, 2, 1, "", "send_basic_transaction"], [76, 2, 1, "", "send_raw_transaction"], [76, 2, 1, "", "send_set_active_stake_transaction"], [76, 2, 1, "", "send_stake_transaction"], [76, 2, 1, "", "set_peer_state"], [76, 2, 1, "", "subscribe_for_head_block"], [76, 2, 1, "", "subscribe_for_head_block_hash"], [76, 2, 1, "", "subscribe_for_logs_by_addresses_and_types"], [76, 2, 1, "", "subscribe_for_validator_election_by_address"], [76, 2, 1, "", "unlock_account"]], "nimiqclient.websocket_rpc": [[78, 1, 1, "", "NimiqRPCMethods"], [79, 1, 1, "", "NimiqSerializer"]], "nimiqclient.websocket_rpc.NimiqRPCMethods": [[78, 2, 1, "", "subscribeForHeadBlock"], [78, 2, 1, "", "subscribeForHeadBlockHash"], [78, 2, 1, "", "subscribeForLogsByAddressesAndTypes"], [78, 2, 1, "", "subscribeForValidatorElectionByAddress"]], "nimiqclient.websocket_rpc.NimiqSerializer": [[79, 2, 1, "", "close"], [79, 2, 1, "", "recv"], [79, 2, 1, "", "send"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"nimiqcli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "callback": [1, 2], "error_except": [3, 4, 5], "internalerrorexcept": 4, "remoteerrorexcept": 5, "model": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "account": [7, 8, 9, 10, 11, 12, 13], "accounttyp": 9, "htlc": 10, "stakingcontract": 11, "vestingcontract": 12, "walletaccount": 13, "block": [14, 15, 16, 17, 18, 19, 20, 21], "blocktyp": 16, "forkproof": 17, "macroblock": 18, "microblock": 19, "slashedslot": 20, "slot": 21, "block_log": [22, 23, 24, 25, 26], "appliedblocklog": 23, "blocklog": 24, "blocklogtyp": 25, "revertedblocklog": 26, "inher": [27, 28], "log": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "createstakerlog": 30, "createvalidatorlog": 31, "deletevalidatorlog": 32, "htlccreatelog": 33, "htlcearlyresolvelog": 34, "htlcregulartransferlog": 35, "htlctimeoutresolvelog": 36, "inactivatevalidatorlog": 37, "logtyp": 39, "parklog": 40, "payfeelog": 41, "payoutrewardlog": 42, "reactivatevalidatorlog": 43, "revertcontractlog": 44, "slashlog": 45, "stakelog": 46, "transferlog": 47, "unparkvalidatorlog": 48, "unstakelog": 49, "updatestakerlog": 50, "updatevalidatorlog": 51, "vestingcreatelog": 52, "mempool": [53, 54], "mempoolinfo": 54, "node": [55, 56, 57], "loglevel": 56, "syncstatu": 57, "peer": [58, 59, 60, 61, 62], "peeraddressst": 60, "peerconnectionst": 61, "peerstatecommand": 62, "staker": [63, 64], "state": [65, 66, 67], "blockchainst": 66, "statedata": 67, "transact": [68, 69], "transaction_log": [70, 71], "transactionlog": 71, "valid": [72, 73, 74], "parkedvalid": 73, "nimiq_cli": [75, 76], "websocket_rpc": [77, 78, 79], "nimiqrpcmethod": 78, "nimiqseri": 79, "nimiq": 80, "python": 80, "client": 80, "usag": 80, "api": 80, "instal": 80, "build": 80, "test": 80, "document": 80, "contribut": 80, "licens": 80}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"nimiqclient": [[0, "module-nimiqclient"]], "nimiqclient.callback": [[1, "module-nimiqclient.callback"]], "nimiqclient.callback.Callback": [[2, "nimiqclient-callback-callback"]], "nimiqclient.error_exception": [[3, "module-nimiqclient.error_exception"]], "nimiqclient.error_exception.InternalErrorException": [[4, "nimiqclient-error-exception-internalerrorexception"]], "nimiqclient.error_exception.RemoteErrorException": [[5, "nimiqclient-error-exception-remoteerrorexception"]], "nimiqclient.models": [[6, "module-nimiqclient.models"]], "nimiqclient.models.account": [[7, "module-nimiqclient.models.account"]], "nimiqclient.models.account.Account": [[8, "nimiqclient-models-account-account"]], "nimiqclient.models.account.AccountType": [[9, "nimiqclient-models-account-accounttype"]], "nimiqclient.models.account.HTLC": [[10, "nimiqclient-models-account-htlc"]], "nimiqclient.models.account.StakingContract": [[11, "nimiqclient-models-account-stakingcontract"]], "nimiqclient.models.account.VestingContract": [[12, "nimiqclient-models-account-vestingcontract"]], "nimiqclient.models.account.WalletAccount": [[13, "nimiqclient-models-account-walletaccount"]], "nimiqclient.models.block": [[14, "module-nimiqclient.models.block"]], "nimiqclient.models.block.Block": [[15, "nimiqclient-models-block-block"]], "nimiqclient.models.block.BlockType": [[16, "nimiqclient-models-block-blocktype"]], "nimiqclient.models.block.ForkProof": [[17, "nimiqclient-models-block-forkproof"]], "nimiqclient.models.block.MacroBlock": [[18, "nimiqclient-models-block-macroblock"]], "nimiqclient.models.block.MicroBlock": [[19, "nimiqclient-models-block-microblock"]], "nimiqclient.models.block.SlashedSlots": [[20, "nimiqclient-models-block-slashedslots"]], "nimiqclient.models.block.Slot": [[21, "nimiqclient-models-block-slot"]], "nimiqclient.models.block_log": [[22, "module-nimiqclient.models.block_log"]], "nimiqclient.models.block_log.AppliedBlockLog": [[23, "nimiqclient-models-block-log-appliedblocklog"]], "nimiqclient.models.block_log.BlockLog": [[24, "nimiqclient-models-block-log-blocklog"]], "nimiqclient.models.block_log.BlockLogType": [[25, "nimiqclient-models-block-log-blocklogtype"]], "nimiqclient.models.block_log.RevertedBlockLog": [[26, "nimiqclient-models-block-log-revertedblocklog"]], "nimiqclient.models.inherent": [[27, "module-nimiqclient.models.inherent"]], "nimiqclient.models.inherent.Inherent": [[28, "nimiqclient-models-inherent-inherent"]], "nimiqclient.models.log": [[29, "module-nimiqclient.models.log"]], "nimiqclient.models.log.CreateStakerLog": [[30, "nimiqclient-models-log-createstakerlog"]], "nimiqclient.models.log.CreateValidatorLog": [[31, "nimiqclient-models-log-createvalidatorlog"]], "nimiqclient.models.log.DeleteValidatorLog": [[32, "nimiqclient-models-log-deletevalidatorlog"]], "nimiqclient.models.log.HTLCCreateLog": [[33, "nimiqclient-models-log-htlccreatelog"]], "nimiqclient.models.log.HTLCEarlyResolveLog": [[34, "nimiqclient-models-log-htlcearlyresolvelog"]], "nimiqclient.models.log.HTLCRegularTransferLog": [[35, "nimiqclient-models-log-htlcregulartransferlog"]], "nimiqclient.models.log.HTLCTimeoutResolveLog": [[36, "nimiqclient-models-log-htlctimeoutresolvelog"]], "nimiqclient.models.log.InactivateValidatorLog": [[37, "nimiqclient-models-log-inactivatevalidatorlog"]], "nimiqclient.models.log.Log": [[38, "nimiqclient-models-log-log"]], "nimiqclient.models.log.LogType": [[39, "nimiqclient-models-log-logtype"]], "nimiqclient.models.log.ParkLog": [[40, "nimiqclient-models-log-parklog"]], "nimiqclient.models.log.PayFeeLog": [[41, "nimiqclient-models-log-payfeelog"]], "nimiqclient.models.log.PayoutRewardLog": [[42, "nimiqclient-models-log-payoutrewardlog"]], "nimiqclient.models.log.ReactivateValidatorLog": [[43, "nimiqclient-models-log-reactivatevalidatorlog"]], "nimiqclient.models.log.RevertContractLog": [[44, "nimiqclient-models-log-revertcontractlog"]], "nimiqclient.models.log.SlashLog": [[45, "nimiqclient-models-log-slashlog"]], "nimiqclient.models.log.StakeLog": [[46, "nimiqclient-models-log-stakelog"]], "nimiqclient.models.log.TransferLog": [[47, "nimiqclient-models-log-transferlog"]], "nimiqclient.models.log.UnparkValidatorLog": [[48, "nimiqclient-models-log-unparkvalidatorlog"]], "nimiqclient.models.log.UnstakeLog": [[49, "nimiqclient-models-log-unstakelog"]], "nimiqclient.models.log.UpdateStakerLog": [[50, "nimiqclient-models-log-updatestakerlog"]], "nimiqclient.models.log.UpdateValidatorLog": [[51, "nimiqclient-models-log-updatevalidatorlog"]], "nimiqclient.models.log.VestingCreateLog": [[52, "nimiqclient-models-log-vestingcreatelog"]], "nimiqclient.models.mempool": [[53, "module-nimiqclient.models.mempool"]], "nimiqclient.models.mempool.MempoolInfo": [[54, "nimiqclient-models-mempool-mempoolinfo"]], "nimiqclient.models.node": [[55, "module-nimiqclient.models.node"]], "nimiqclient.models.node.LogLevel": [[56, "nimiqclient-models-node-loglevel"]], "nimiqclient.models.node.SyncStatus": [[57, "nimiqclient-models-node-syncstatus"]], "nimiqclient.models.peer": [[58, "module-nimiqclient.models.peer"]], "nimiqclient.models.peer.Peer": [[59, "nimiqclient-models-peer-peer"]], "nimiqclient.models.peer.PeerAddressState": [[60, "nimiqclient-models-peer-peeraddressstate"]], "nimiqclient.models.peer.PeerConnectionState": [[61, "nimiqclient-models-peer-peerconnectionstate"]], "nimiqclient.models.peer.PeerStateCommand": [[62, "nimiqclient-models-peer-peerstatecommand"]], "nimiqclient.models.staker": [[63, "module-nimiqclient.models.staker"]], "nimiqclient.models.staker.Staker": [[64, "nimiqclient-models-staker-staker"]], "nimiqclient.models.state": [[65, "module-nimiqclient.models.state"]], "nimiqclient.models.state.BlockchainState": [[66, "nimiqclient-models-state-blockchainstate"]], "nimiqclient.models.state.StateData": [[67, "nimiqclient-models-state-statedata"]], "nimiqclient.models.transaction": [[68, "module-nimiqclient.models.transaction"]], "nimiqclient.models.transaction.Transaction": [[69, "nimiqclient-models-transaction-transaction"]], "nimiqclient.models.transaction_log": [[70, "module-nimiqclient.models.transaction_log"]], "nimiqclient.models.transaction_log.TransactionLog": [[71, "nimiqclient-models-transaction-log-transactionlog"]], "nimiqclient.models.validator": [[72, "module-nimiqclient.models.validator"]], "nimiqclient.models.validator.ParkedValidators": [[73, "nimiqclient-models-validator-parkedvalidators"]], "nimiqclient.models.validator.Validator": [[74, "nimiqclient-models-validator-validator"]], "nimiqclient.nimiq_client": [[75, "module-nimiqclient.nimiq_client"]], "nimiqclient.nimiq_client.NimiqClient": [[76, "nimiqclient-nimiq-client-nimiqclient"]], "nimiqclient.websocket_rpc": [[77, "module-nimiqclient.websocket_rpc"]], "nimiqclient.websocket_rpc.NimiqRPCMethods": [[78, "nimiqclient-websocket-rpc-nimiqrpcmethods"]], "nimiqclient.websocket_rpc.NimiqSerializer": [[79, "nimiqclient-websocket-rpc-nimiqserializer"]], "Nimiq Python Client": [[80, "nimiq-python-client"]], "Usage": [[80, "usage"]], "API": [[80, "api"]], "Installation": [[80, "installation"]], "Build": [[80, "build"]], "Test": [[80, "test"]], "Documentation": [[80, "documentation"]], "Contributions": [[80, "contributions"]], "License": [[80, "license"]]}, "indexentries": {"module": [[0, "module-nimiqclient"], [1, "module-nimiqclient.callback"], [3, "module-nimiqclient.error_exception"], [6, "module-nimiqclient.models"], [7, "module-nimiqclient.models.account"], [14, "module-nimiqclient.models.block"], [22, "module-nimiqclient.models.block_log"], [27, "module-nimiqclient.models.inherent"], [29, "module-nimiqclient.models.log"], [53, "module-nimiqclient.models.mempool"], [55, "module-nimiqclient.models.node"], [58, "module-nimiqclient.models.peer"], [63, "module-nimiqclient.models.staker"], [65, "module-nimiqclient.models.state"], [68, "module-nimiqclient.models.transaction"], [70, "module-nimiqclient.models.transaction_log"], [72, "module-nimiqclient.models.validator"], [75, "module-nimiqclient.nimiq_client"], [77, "module-nimiqclient.websocket_rpc"]], "nimiqclient": [[0, "module-nimiqclient"]], "nimiqclient.callback": [[1, "module-nimiqclient.callback"]], "callback (class in nimiqclient.callback)": [[2, "nimiqclient.callback.Callback"]], "call() (nimiqclient.callback.callback method)": [[2, "nimiqclient.callback.Callback.call"]], "nimiqclient.error_exception": [[3, "module-nimiqclient.error_exception"]], "internalerrorexception": [[4, "nimiqclient.error_exception.InternalErrorException"]], "remoteerrorexception": [[5, "nimiqclient.error_exception.RemoteErrorException"]], "nimiqclient.models": [[6, "module-nimiqclient.models"]], "nimiqclient.models.account": [[7, "module-nimiqclient.models.account"]], "account (class in nimiqclient.models.account)": [[8, "nimiqclient.models.account.Account"]], "get_account() (nimiqclient.models.account.account static method)": [[8, "nimiqclient.models.account.Account.get_account"]], "accounttype (class in nimiqclient.models.account)": [[9, "nimiqclient.models.account.AccountType"]], "basic (nimiqclient.models.account.accounttype attribute)": [[9, "nimiqclient.models.account.AccountType.BASIC"]], "htlc (nimiqclient.models.account.accounttype attribute)": [[9, "nimiqclient.models.account.AccountType.HTLC"]], "staking (nimiqclient.models.account.accounttype attribute)": [[9, "nimiqclient.models.account.AccountType.STAKING"]], "vesting (nimiqclient.models.account.accounttype attribute)": [[9, "nimiqclient.models.account.AccountType.VESTING"]], "htlc (class in nimiqclient.models.account)": [[10, "nimiqclient.models.account.HTLC"]], "get_account() (nimiqclient.models.account.htlc static method)": [[10, "nimiqclient.models.account.HTLC.get_account"]], "stakingcontract (class in nimiqclient.models.account)": [[11, "nimiqclient.models.account.StakingContract"]], "get_account() (nimiqclient.models.account.stakingcontract static method)": [[11, "nimiqclient.models.account.StakingContract.get_account"]], "vestingcontract (class in nimiqclient.models.account)": [[12, "nimiqclient.models.account.VestingContract"]], "get_account() (nimiqclient.models.account.vestingcontract static method)": [[12, "nimiqclient.models.account.VestingContract.get_account"]], "walletaccount (class in nimiqclient.models.account)": [[13, "nimiqclient.models.account.WalletAccount"]], "nimiqclient.models.block": [[14, "module-nimiqclient.models.block"]], "block (class in nimiqclient.models.block)": [[15, "nimiqclient.models.block.Block"]], "get_block() (nimiqclient.models.block.block static method)": [[15, "nimiqclient.models.block.Block.get_block"]], "blocktype (class in nimiqclient.models.block)": [[16, "nimiqclient.models.block.BlockType"]], "macroblock (nimiqclient.models.block.blocktype attribute)": [[16, "nimiqclient.models.block.BlockType.MacroBlock"]], "microblock (nimiqclient.models.block.blocktype attribute)": [[16, "nimiqclient.models.block.BlockType.MicroBlock"]], "forkproof (class in nimiqclient.models.block)": [[17, "nimiqclient.models.block.ForkProof"]], "macroblock (class in nimiqclient.models.block)": [[18, "nimiqclient.models.block.MacroBlock"]], "get_block() (nimiqclient.models.block.macroblock static method)": [[18, "nimiqclient.models.block.MacroBlock.get_block"]], "microblock (class in nimiqclient.models.block)": [[19, "nimiqclient.models.block.MicroBlock"]], "get_block() (nimiqclient.models.block.microblock static method)": [[19, "nimiqclient.models.block.MicroBlock.get_block"]], "slashedslots (class in nimiqclient.models.block)": [[20, "nimiqclient.models.block.SlashedSlots"]], "slot (class in nimiqclient.models.block)": [[21, "nimiqclient.models.block.Slot"]], "nimiqclient.models.block_log": [[22, "module-nimiqclient.models.block_log"]], "appliedblocklog (class in nimiqclient.models.block_log)": [[23, "nimiqclient.models.block_log.AppliedBlockLog"]], "get_block_log() (nimiqclient.models.block_log.appliedblocklog static method)": [[23, "nimiqclient.models.block_log.AppliedBlockLog.get_block_log"]], "blocklog (class in nimiqclient.models.block_log)": [[24, "nimiqclient.models.block_log.BlockLog"]], "get_block_log() (nimiqclient.models.block_log.blocklog static method)": [[24, "nimiqclient.models.block_log.BlockLog.get_block_log"]], "applied (nimiqclient.models.block_log.blocklogtype attribute)": [[25, "nimiqclient.models.block_log.BlockLogType.APPLIED"]], "blocklogtype (class in nimiqclient.models.block_log)": [[25, "nimiqclient.models.block_log.BlockLogType"]], "reverted (nimiqclient.models.block_log.blocklogtype attribute)": [[25, "nimiqclient.models.block_log.BlockLogType.REVERTED"]], "revertedblocklog (class in nimiqclient.models.block_log)": [[26, "nimiqclient.models.block_log.RevertedBlockLog"]], "get_block_log() (nimiqclient.models.block_log.revertedblocklog static method)": [[26, "nimiqclient.models.block_log.RevertedBlockLog.get_block_log"]], "nimiqclient.models.inherent": [[27, "module-nimiqclient.models.inherent"]], "inherent (class in nimiqclient.models.inherent)": [[28, "nimiqclient.models.inherent.Inherent"]], "nimiqclient.models.log": [[29, "module-nimiqclient.models.log"]], "createstakerlog (class in nimiqclient.models.log)": [[30, "nimiqclient.models.log.CreateStakerLog"]], "get_log() (nimiqclient.models.log.createstakerlog static method)": [[30, "nimiqclient.models.log.CreateStakerLog.get_log"]], "createvalidatorlog (class in nimiqclient.models.log)": [[31, "nimiqclient.models.log.CreateValidatorLog"]], "get_log() (nimiqclient.models.log.createvalidatorlog static method)": [[31, "nimiqclient.models.log.CreateValidatorLog.get_log"]], "deletevalidatorlog (class in nimiqclient.models.log)": [[32, "nimiqclient.models.log.DeleteValidatorLog"]], "get_log() (nimiqclient.models.log.deletevalidatorlog static method)": [[32, "nimiqclient.models.log.DeleteValidatorLog.get_log"]], "htlccreatelog (class in nimiqclient.models.log)": [[33, "nimiqclient.models.log.HTLCCreateLog"]], "get_log() (nimiqclient.models.log.htlccreatelog static method)": [[33, "nimiqclient.models.log.HTLCCreateLog.get_log"]], "htlcearlyresolvelog (class in nimiqclient.models.log)": [[34, "nimiqclient.models.log.HTLCEarlyResolveLog"]], "get_log() (nimiqclient.models.log.htlcearlyresolvelog static method)": [[34, "nimiqclient.models.log.HTLCEarlyResolveLog.get_log"]], "htlcregulartransferlog (class in nimiqclient.models.log)": [[35, "nimiqclient.models.log.HTLCRegularTransferLog"]], "get_log() (nimiqclient.models.log.htlcregulartransferlog static method)": [[35, "nimiqclient.models.log.HTLCRegularTransferLog.get_log"]], "htlctimeoutresolvelog (class in nimiqclient.models.log)": [[36, "nimiqclient.models.log.HTLCTimeoutResolveLog"]], "get_log() (nimiqclient.models.log.htlctimeoutresolvelog static method)": [[36, "nimiqclient.models.log.HTLCTimeoutResolveLog.get_log"]], "inactivatevalidatorlog (class in nimiqclient.models.log)": [[37, "nimiqclient.models.log.InactivateValidatorLog"]], "get_log() (nimiqclient.models.log.inactivatevalidatorlog static method)": [[37, "nimiqclient.models.log.InactivateValidatorLog.get_log"]], "log (class in nimiqclient.models.log)": [[38, "nimiqclient.models.log.Log"]], "get_log() (nimiqclient.models.log.log static method)": [[38, "nimiqclient.models.log.Log.get_log"]], "create_staker (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.CREATE_STAKER"]], "create_validator (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.CREATE_VALIDATOR"]], "delete_validator (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.DELETE_VALIDATOR"]], "htlc_create (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.HTLC_CREATE"]], "htlc_early_resolve (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.HTLC_EARLY_RESOLVE"]], "htlc_regular_transfer (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.HTLC_REGULAR_TRANSFER"]], "htlc_timeout_resolve (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.HTLC_TIMEOUT_RESOLVE"]], "inactivate_validator (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.INACTIVATE_VALIDATOR"]], "logtype (class in nimiqclient.models.log)": [[39, "nimiqclient.models.log.LogType"]], "park (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.PARK"]], "payout_reward (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.PAYOUT_REWARD"]], "pay_fee (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.PAY_FEE"]], "reactivate_validator (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.REACTIVATE_VALIDATOR"]], "revert_contract (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.REVERT_CONTRACT"]], "slash (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.SLASH"]], "stake (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.STAKE"]], "transfer (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.TRANSFER"]], "unpark_validator (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.UNPARK_VALIDATOR"]], "unstake (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.UNSTAKE"]], "update_staker (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.UPDATE_STAKER"]], "update_validator (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.UPDATE_VALIDATOR"]], "vesting_create (nimiqclient.models.log.logtype attribute)": [[39, "nimiqclient.models.log.LogType.VESTING_CREATE"]], "parklog (class in nimiqclient.models.log)": [[40, "nimiqclient.models.log.ParkLog"]], "get_log() (nimiqclient.models.log.parklog static method)": [[40, "nimiqclient.models.log.ParkLog.get_log"]], "payfeelog (class in nimiqclient.models.log)": [[41, "nimiqclient.models.log.PayFeeLog"]], "get_log() (nimiqclient.models.log.payfeelog static method)": [[41, "nimiqclient.models.log.PayFeeLog.get_log"]], "payoutrewardlog (class in nimiqclient.models.log)": [[42, "nimiqclient.models.log.PayoutRewardLog"]], "get_log() (nimiqclient.models.log.payoutrewardlog static method)": [[42, "nimiqclient.models.log.PayoutRewardLog.get_log"]], "reactivatevalidatorlog (class in nimiqclient.models.log)": [[43, "nimiqclient.models.log.ReactivateValidatorLog"]], "get_log() (nimiqclient.models.log.reactivatevalidatorlog static method)": [[43, "nimiqclient.models.log.ReactivateValidatorLog.get_log"]], "revertcontractlog (class in nimiqclient.models.log)": [[44, "nimiqclient.models.log.RevertContractLog"]], "get_log() (nimiqclient.models.log.revertcontractlog static method)": [[44, "nimiqclient.models.log.RevertContractLog.get_log"]], "slashlog (class in nimiqclient.models.log)": [[45, "nimiqclient.models.log.SlashLog"]], "get_log() (nimiqclient.models.log.slashlog static method)": [[45, "nimiqclient.models.log.SlashLog.get_log"]], "stakelog (class in nimiqclient.models.log)": [[46, "nimiqclient.models.log.StakeLog"]], "get_log() (nimiqclient.models.log.stakelog static method)": [[46, "nimiqclient.models.log.StakeLog.get_log"]], "transferlog (class in nimiqclient.models.log)": [[47, "nimiqclient.models.log.TransferLog"]], "get_log() (nimiqclient.models.log.transferlog static method)": [[47, "nimiqclient.models.log.TransferLog.get_log"]], "unparkvalidatorlog (class in nimiqclient.models.log)": [[48, "nimiqclient.models.log.UnparkValidatorLog"]], "get_log() (nimiqclient.models.log.unparkvalidatorlog static method)": [[48, "nimiqclient.models.log.UnparkValidatorLog.get_log"]], "unstakelog (class in nimiqclient.models.log)": [[49, "nimiqclient.models.log.UnstakeLog"]], "get_log() (nimiqclient.models.log.unstakelog static method)": [[49, "nimiqclient.models.log.UnstakeLog.get_log"]], "updatestakerlog (class in nimiqclient.models.log)": [[50, "nimiqclient.models.log.UpdateStakerLog"]], "get_log() (nimiqclient.models.log.updatestakerlog static method)": [[50, "nimiqclient.models.log.UpdateStakerLog.get_log"]], "updatevalidatorlog (class in nimiqclient.models.log)": [[51, "nimiqclient.models.log.UpdateValidatorLog"]], "get_log() (nimiqclient.models.log.updatevalidatorlog static method)": [[51, "nimiqclient.models.log.UpdateValidatorLog.get_log"]], "vestingcreatelog (class in nimiqclient.models.log)": [[52, "nimiqclient.models.log.VestingCreateLog"]], "get_log() (nimiqclient.models.log.vestingcreatelog static method)": [[52, "nimiqclient.models.log.VestingCreateLog.get_log"]], "nimiqclient.models.mempool": [[53, "module-nimiqclient.models.mempool"]], "mempoolinfo (class in nimiqclient.models.mempool)": [[54, "nimiqclient.models.mempool.MempoolInfo"]], "buckets (nimiqclient.models.mempool.mempoolinfo attribute)": [[54, "nimiqclient.models.mempool.MempoolInfo.buckets"]], "total (nimiqclient.models.mempool.mempoolinfo attribute)": [[54, "nimiqclient.models.mempool.MempoolInfo.total"]], "transactionsperbucket (nimiqclient.models.mempool.mempoolinfo attribute)": [[54, "nimiqclient.models.mempool.MempoolInfo.transactionsPerBucket"]], "nimiqclient.models.node": [[55, "module-nimiqclient.models.node"]], "assert (nimiqclient.models.node.loglevel attribute)": [[56, "nimiqclient.models.node.LogLevel.ASSERT"]], "debug (nimiqclient.models.node.loglevel attribute)": [[56, "nimiqclient.models.node.LogLevel.DEBUG"]], "error (nimiqclient.models.node.loglevel attribute)": [[56, "nimiqclient.models.node.LogLevel.ERROR"]], "info (nimiqclient.models.node.loglevel attribute)": [[56, "nimiqclient.models.node.LogLevel.INFO"]], "loglevel (class in nimiqclient.models.node)": [[56, "nimiqclient.models.node.LogLevel"]], "trace (nimiqclient.models.node.loglevel attribute)": [[56, "nimiqclient.models.node.LogLevel.TRACE"]], "verbose (nimiqclient.models.node.loglevel attribute)": [[56, "nimiqclient.models.node.LogLevel.VERBOSE"]], "warn (nimiqclient.models.node.loglevel attribute)": [[56, "nimiqclient.models.node.LogLevel.WARN"]], "syncstatus (class in nimiqclient.models.node)": [[57, "nimiqclient.models.node.SyncStatus"]], "nimiqclient.models.peer": [[58, "module-nimiqclient.models.peer"]], "peer (class in nimiqclient.models.peer)": [[59, "nimiqclient.models.peer.Peer"]], "banned (nimiqclient.models.peer.peeraddressstate attribute)": [[60, "nimiqclient.models.peer.PeerAddressState.BANNED"]], "established (nimiqclient.models.peer.peeraddressstate attribute)": [[60, "nimiqclient.models.peer.PeerAddressState.ESTABLISHED"]], "failed (nimiqclient.models.peer.peeraddressstate attribute)": [[60, "nimiqclient.models.peer.PeerAddressState.FAILED"]], "new (nimiqclient.models.peer.peeraddressstate attribute)": [[60, "nimiqclient.models.peer.PeerAddressState.NEW"]], "peeraddressstate (class in nimiqclient.models.peer)": [[60, "nimiqclient.models.peer.PeerAddressState"]], "tried (nimiqclient.models.peer.peeraddressstate attribute)": [[60, "nimiqclient.models.peer.PeerAddressState.TRIED"]], "closed (nimiqclient.models.peer.peerconnectionstate attribute)": [[61, "nimiqclient.models.peer.PeerConnectionState.CLOSED"]], "connected (nimiqclient.models.peer.peerconnectionstate attribute)": [[61, "nimiqclient.models.peer.PeerConnectionState.CONNECTED"]], "connecting (nimiqclient.models.peer.peerconnectionstate attribute)": [[61, "nimiqclient.models.peer.PeerConnectionState.CONNECTING"]], "established (nimiqclient.models.peer.peerconnectionstate attribute)": [[61, "nimiqclient.models.peer.PeerConnectionState.ESTABLISHED"]], "negotiating (nimiqclient.models.peer.peerconnectionstate attribute)": [[61, "nimiqclient.models.peer.PeerConnectionState.NEGOTIATING"]], "new (nimiqclient.models.peer.peerconnectionstate attribute)": [[61, "nimiqclient.models.peer.PeerConnectionState.NEW"]], "peerconnectionstate (class in nimiqclient.models.peer)": [[61, "nimiqclient.models.peer.PeerConnectionState"]], "ban (nimiqclient.models.peer.peerstatecommand attribute)": [[62, "nimiqclient.models.peer.PeerStateCommand.BAN"]], "connect (nimiqclient.models.peer.peerstatecommand attribute)": [[62, "nimiqclient.models.peer.PeerStateCommand.CONNECT"]], "disconnect (nimiqclient.models.peer.peerstatecommand attribute)": [[62, "nimiqclient.models.peer.PeerStateCommand.DISCONNECT"]], "peerstatecommand (class in nimiqclient.models.peer)": [[62, "nimiqclient.models.peer.PeerStateCommand"]], "unban (nimiqclient.models.peer.peerstatecommand attribute)": [[62, "nimiqclient.models.peer.PeerStateCommand.UNBAN"]], "nimiqclient.models.staker": [[63, "module-nimiqclient.models.staker"]], "staker (class in nimiqclient.models.staker)": [[64, "nimiqclient.models.staker.Staker"]], "nimiqclient.models.state": [[65, "module-nimiqclient.models.state"]], "blockchainstate (class in nimiqclient.models.state)": [[66, "nimiqclient.models.state.BlockchainState"]], "statedata (class in nimiqclient.models.state)": [[67, "nimiqclient.models.state.StateData"]], "nimiqclient.models.transaction": [[68, "module-nimiqclient.models.transaction"]], "transaction (class in nimiqclient.models.transaction)": [[69, "nimiqclient.models.transaction.Transaction"]], "nimiqclient.models.transaction_log": [[70, "module-nimiqclient.models.transaction_log"]], "transactionlog (class in nimiqclient.models.transaction_log)": [[71, "nimiqclient.models.transaction_log.TransactionLog"]], "nimiqclient.models.validator": [[72, "module-nimiqclient.models.validator"]], "parkedvalidators (class in nimiqclient.models.validator)": [[73, "nimiqclient.models.validator.ParkedValidators"]], "validator (class in nimiqclient.models.validator)": [[74, "nimiqclient.models.validator.Validator"]], "nimiqclient.nimiq_client": [[75, "module-nimiqclient.nimiq_client"]], "nimiqclient (class in nimiqclient.nimiq_client)": [[76, "nimiqclient.nimiq_client.NimiqClient"]], "ws_response_timeout (nimiqclient.nimiq_client.nimiqclient attribute)": [[76, "nimiqclient.nimiq_client.NimiqClient.WS_RESPONSE_TIMEOUT"]], "accounts() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.accounts"]], "batch_number() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.batch_number"]], "block_number() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.block_number"]], "consensus() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.consensus"]], "create_account() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.create_account"]], "create_remove_stake_transaction() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.create_remove_stake_transaction"]], "create_retire_stake_transaction() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.create_retire_stake_transaction"]], "create_update_staker_transaction() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.create_update_staker_transaction"]], "epoch_number() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.epoch_number"]], "get_account_by_address() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_account_by_address"]], "get_accounts() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_accounts"]], "get_active_validators() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_active_validators"]], "get_block_by_hash() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_block_by_hash"]], "get_block_by_number() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_block_by_number"]], "get_block_transaction_count_by_hash() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_block_transaction_count_by_hash"]], "get_block_transaction_count_by_number() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_block_transaction_count_by_number"]], "get_callbacks() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_callbacks"]], "get_current_slashed_slots() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_current_slashed_slots"]], "get_inherents_by_batch_number() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_inherents_by_batch_number"]], "get_inherents_by_block_number() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_inherents_by_block_number"]], "get_latest_block() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_latest_block"]], "get_parked_validators() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_parked_validators"]], "get_previous_slashed_slots() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_previous_slashed_slots"]], "get_raw_transaction_info() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_raw_transaction_info"]], "get_slot_at() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_slot_at"]], "get_staker_by_address() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_staker_by_address"]], "get_stakers_by_validator_address() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_stakers_by_validator_address"]], "get_subscriptions() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_subscriptions"]], "get_transaction_by_hash() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_transaction_by_hash"]], "get_transaction_hashes_by_address() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_transaction_hashes_by_address"]], "get_transactions_by_address() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_transactions_by_address"]], "get_transactions_by_batch_number() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_transactions_by_batch_number"]], "get_transactions_by_block_number() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_transactions_by_block_number"]], "get_validator_address() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_validator_address"]], "get_validator_by_address() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_validator_by_address"]], "get_validator_signing_key() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_validator_signing_key"]], "get_validator_voting_key() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_validator_voting_key"]], "get_validators() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.get_validators"]], "importrawkey() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.importRawKey"]], "is_account_imported() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.is_account_imported"]], "is_account_unlocked() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.is_account_unlocked"]], "lock_account() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.lock_account"]], "mempool() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.mempool"]], "mempool_content() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.mempool_content"]], "min_fee_per_byte() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.min_fee_per_byte"]], "peer_count() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.peer_count"]], "peer_id() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.peer_id"]], "peer_list() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.peer_list"]], "peer_state() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.peer_state"]], "send_basic_transaction() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.send_basic_transaction"]], "send_raw_transaction() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.send_raw_transaction"]], "send_set_active_stake_transaction() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.send_set_active_stake_transaction"]], "send_stake_transaction() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.send_stake_transaction"]], "set_peer_state() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.set_peer_state"]], "subscribe_for_head_block() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.subscribe_for_head_block"]], "subscribe_for_head_block_hash() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.subscribe_for_head_block_hash"]], "subscribe_for_logs_by_addresses_and_types() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.subscribe_for_logs_by_addresses_and_types"]], "subscribe_for_validator_election_by_address() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.subscribe_for_validator_election_by_address"]], "unlock_account() (nimiqclient.nimiq_client.nimiqclient method)": [[76, "nimiqclient.nimiq_client.NimiqClient.unlock_account"]], "nimiqclient.websocket_rpc": [[77, "module-nimiqclient.websocket_rpc"]], "nimiqrpcmethods (class in nimiqclient.websocket_rpc)": [[78, "nimiqclient.websocket_rpc.NimiqRPCMethods"]], "subscribeforheadblock() (nimiqclient.websocket_rpc.nimiqrpcmethods method)": [[78, "nimiqclient.websocket_rpc.NimiqRPCMethods.subscribeForHeadBlock"]], "subscribeforheadblockhash() (nimiqclient.websocket_rpc.nimiqrpcmethods method)": [[78, "nimiqclient.websocket_rpc.NimiqRPCMethods.subscribeForHeadBlockHash"]], "subscribeforlogsbyaddressesandtypes() (nimiqclient.websocket_rpc.nimiqrpcmethods method)": [[78, "nimiqclient.websocket_rpc.NimiqRPCMethods.subscribeForLogsByAddressesAndTypes"]], "subscribeforvalidatorelectionbyaddress() (nimiqclient.websocket_rpc.nimiqrpcmethods method)": [[78, "nimiqclient.websocket_rpc.NimiqRPCMethods.subscribeForValidatorElectionByAddress"]], "nimiqserializer (class in nimiqclient.websocket_rpc)": [[79, "nimiqclient.websocket_rpc.NimiqSerializer"]], "close() (nimiqclient.websocket_rpc.nimiqserializer method)": [[79, "nimiqclient.websocket_rpc.NimiqSerializer.close"]], "recv() (nimiqclient.websocket_rpc.nimiqserializer method)": [[79, "nimiqclient.websocket_rpc.NimiqSerializer.recv"]], "send() (nimiqclient.websocket_rpc.nimiqserializer method)": [[79, "nimiqclient.websocket_rpc.NimiqSerializer.send"]]}})